# This workflow will build a docker container, publish and deploy it to Tencent Kubernetes Engine (TKE).
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Tencent Kubernetes Engine cluster,
#    including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace:
#    - TENCENT_CLOUD_SECRET_ID with Tencent Cloud secret id
#    - TENCENT_CLOUD_SECRET_KEY with Tencent Cloud secret key
#    - TENCENT_CLOUD_ACCOUNT_ID with Tencent Cloud account id
#    - TKE_REGISTRY_PASSWORD with TKE registry password
#
# 3. Change the values for the TKE_IMAGE_URL, TKE_REGION, TKE_CLUSTER_ID and DEPLOYMENT_NAME environment variables (below).

name: CI/CD for TKE

on:
  push:
    branches:
      - ci

# Environment variables available to all jobs and steps in this workflow
env:
  TKE_IMAGE_URL: hkccr.ccs.tencentyun.com/tke_cluster/tke_cluster
  TKE_REGION: ap-shanghai
  TKE_CLUSTER_ID: cls-iw9xj6c7
  DEPLOYMENT_NAME: snake-deployment-test
  NAMESPACE: test

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

#      - name: Extract branch name
#        shell: bash
#        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#        id: extract_branch

      # Build
      - name: Build Docker image
        run: |
          docker build -t ${TKE_IMAGE_URL}-${NAMESPACE}:${GITHUB_SHA} .

      - name: Login TKE Registry
        run: |
          docker login -u ${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }} -p ${{ secrets.TKE_REGISTRY_PASSWORD }} ${TKE_IMAGE_URL}
      # Push the Docker image to TKE Registry
      - name: Publish image to TKE Registry
        run: |
          docker push ${TKE_IMAGE_URL}:${GITHUB_SHA}
      - name: Set up Kustomize
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Set up ~/.kube/config for connecting TKE cluster
        uses: TencentCloud/tke-cluster-credential-action@v1
        with:
          secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
          secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
          tke_region: ${{ env.TKE_REGION }}
          cluster_id: ${{ env.TKE_CLUSTER_ID }}
      - name: Creating test namespace
        run: |
          kubectl create namespace ${NAMESPACE} --dry-run=client -o yaml | kubectl apply -f -
      - name: Switch to TKE context
        run: |
          kubectl config use-context ${TKE_CLUSTER_ID}-context-default --namespace=${NAMESPACE}
      # Deploy the Docker image to the TKE cluster
      - name: Deploy To TKE
        run: |
          ./kustomize edit set image ${TKE_IMAGE_URL}-${NAMESPACE}:${GITHUB_SHA}
          ./kustomize build . | kubectl apply -n=${NAMESPACE} -f -
          kubectl rollout status deployment/${DEPLOYMENT_NAME} -n=${NAMESPACE}
          kubectl get services -o wide -n=${NAMESPACE}